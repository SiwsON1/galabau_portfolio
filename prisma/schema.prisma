// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Drahtstaerke {
  id        String      @id @default(uuid())
  name      String      // "6/5/6" lub "8/6/8"
  prices    Price[]
  orderItems OrderItem[] // Dodane pole relacjia
  createdAt   DateTime  @default(now())
updatedAt DateTime @default(now()) @updatedAt
}

model FenceSize {
  id        String      @id @default(uuid())
  name      String      // np. "0.63", "0.83", "1.03" itd.
  prices    Price[]
  orderItems OrderItem[] // Dodane pole relacji
  createdAt   DateTime  @default(now())
updatedAt DateTime @default(now()) @updatedAt
}

model Color {
  id        String      @id @default(uuid())
  name      String      // Kolor, np. "zielony", "antrazyt", "ocynk"
  prices    Price[]
  orderItems OrderItem[] // Dodane pole relacji
  createdAt   DateTime  @default(now())
  updatedAt DateTime @default(now()) @updatedAt

}


model Customer {
  id            String   @id @default(uuid())
  vorname       String
  nachname      String
  email         String   @unique
  telefon       String
  postleitzahl  String
  stadt         String
  anmerkungen   String?
  orders        Order[]
  createdAt   DateTime  @default(now())
  updatedAt DateTime @default(now()) @updatedAt

}

model Price {
  id             String       @id @default(uuid())
  drahtstaerkeId String
  fenceSizeId    String
  colorId        String
  price          Float
  length         Int
  drahtstaerke   Drahtstaerke @relation(fields: [drahtstaerkeId], references: [id])
  fenceSize      FenceSize    @relation(fields: [fenceSizeId], references: [id])
  color          Color        @relation(fields: [colorId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt DateTime @default(now()) @updatedAt


  @@index([drahtstaerkeId])
  @@index([fenceSizeId])
  @@index([colorId])
}

model OrderItem {
  id             String       @id @default(uuid())
  orderId        String
  drahtstaerkeId String
  fenceSizeId    String
  colorId        String
  totalPrice     Float
  length String @default("default value")
  corners    String
  mounting   String
  delivery   String
  gate       String
  order          Order        @relation(fields: [orderId], references: [id])
  drahtstaerke   Drahtstaerke @relation(fields: [drahtstaerkeId], references: [id])
  fenceSize      FenceSize    @relation(fields: [fenceSizeId], references: [id])
  color          Color        @relation(fields: [colorId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt DateTime @default(now()) @updatedAt


  @@index([orderId])
  @@index([drahtstaerkeId])
  @@index([fenceSizeId])
  @@index([colorId])
}

enum OrderStatus {
  NEW
  IN_PROGRESS
  COMPLETED
}

model Order {
  id          String      @id @default(uuid())
  customerId  String
  items       OrderItem[]
  customer    Customer    @relation(fields: [customerId], references: [id])
    status     OrderStatus @default(NEW)
  createdAt   DateTime    @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@index([customerId])
}